version: '3.8'

# NOTE:
# We're using very old versions of Kafka and Zookeeper in this example.
# The reason is that these images allow us to create topics during the container startup.
# Please use the latest versions in your production environment.

services:
    kafka-ui:
        container_name: kafka-ui
        image: provectuslabs/kafka-ui:latest
        ports:
            - "8080:8080"
        depends_on:
            - zookeeper
            - kafka1
        environment:
            KAFKA_CLUSTERS_0_NAME: local
            KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka1:9092,kafka2:9092"
            KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

    zookeeper:
        image: wurstmeister/zookeeper:latest
        container_name: zookeeper
        ports:
            - '2181:2181'
        expose:
            - "2181"
    kafka1:
        image: bitnami/kafka
        container_name: kafka1
        depends_on:
            - zookeeper
        ports:
            - "9093:9093"
        expose:
            - "9092"
        environment:
            KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
            KAFKA_NUM_PARTITIONS: 2
            #KAFKA_CFG_BROKER_ID: 1001
            KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka1:9092,OUTSIDE://localhost:9093
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
            KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE

    kafka2:
        image: bitnami/kafka
        container_name: kafka2
        depends_on:
            - zookeeper
        ports:
            - "9094:9094"
        expose:
            - "9092"
        environment:
            KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
            KAFKA_NUM_PARTITIONS: 2
            #KAFKA_CFG_BROKER_ID: 1002
            KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka2:9092,OUTSIDE://localhost:9094
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE

    producer:
        image: ghcr.io/colinjlacy/eda-producer:latest
        ports:
            - "8888:8888"
        expose:
            - "8888"
        container_name: producer
        depends_on:
            - zookeeper
            - kafka1
            - kafka2
        environment:
            KAFKA_BOOTSTRAP_SERVERS: 'kafka1:9092,kafka2:9092'
            PORT: 8888
            HOST: '0.0.0.0'

    primary-consumer:
        image: ghcr.io/colinjlacy/eda-consumer:latest
        ports:
            - "8000:8000"
        expose:
            - "8000"
        container_name: primary-consumer
        depends_on:
            - zookeeper
            - kafka1
            - kafka2
        environment:
            KAFKA_BOOTSTRAP_SERVERS: 'kafka1:9092,kafka2:9092'
            KAFKA_TOPIC: 'first-topic'
            CONSUMER_GROUP: 'blue-group'
            PORT: "8000"

    blue-consumer:
        image: ghcr.io/colinjlacy/eda-consumer:latest
        ports:
            - "8001:8001"
        expose:
            - "8001"
        container_name: blue-consumer
        depends_on:
            - zookeeper
            - kafka1
            - kafka2
        environment:
            KAFKA_BOOTSTRAP_SERVERS: 'kafka1:9092,kafka2:9092'
            KAFKA_TOPIC: 'first-topic'
            CONSUMER_GROUP: 'blue-group'
            PORT: "8001"

    orange-consumer:
        image: ghcr.io/colinjlacy/eda-consumer:latest
        ports:
            - "8001:8001"
        expose:
            - "8001"
        container_name: orange-consumer
        depends_on:
            - zookeeper
            - kafka1
            - kafka2
        environment:
            KAFKA_BOOTSTRAP_SERVERS: 'kafka1:9092,kafka2:9092'
            KAFKA_TOPIC: 'first-topic'
            CONSUMER_GROUP: 'orange-group'
            PORT: "8001"

    error-consumer:
        image: ghcr.io/colinjlacy/eda-consumer:latest
        ports:
            - "8084:8084"
        expose:
            - "8084"
        container_name: error-consumer
        depends_on:
            - zookeeper
            - kafka1
            - kafka2
        environment:
            KAFKA_BOOTSTRAP_SERVERS: 'kafka1:9092,kafka2:9092'
            KAFKA_TOPIC: 'dlq'
            CONSUMER_GROUP: 'error-group'
            PORT: "8084"

    provisioner:
        build:
            context: ./consumer-producer
            dockerfile: ./Dockerfile_cp
        container_name: provisioner
        ports:
            - "8081:8081"
        expose:
            - "8081"
        depends_on:
            - zookeeper
            - kafka1
            - kafka2
        environment:
            PORT: 8081

    authorizer:
        build:
            context: ./consumer-producer
            dockerfile: ./Dockerfile_cp_cp
        container_name: authorizer
        ports:
            - "8082:8082"
        expose:
            - "8082"
        depends_on:
            - zookeeper
            - kafka1
            - kafka2
        environment:
            CONSUMER_TOPICS: authorize
            CONSUMER_GROUP: authorizer-group
            PRODUCER_TOPIC: notify
            PORT: 8082

    notifier:
        build:
            context: ./consumer-producer
            dockerfile: ./Dockerfile_cp
        container_name: notifier
        ports:
            - "8083:8083"
        expose:
            - "8083"
        depends_on:
            - zookeeper
            - kafka1
            - kafka2
        environment:
            CONSUMER_TOPICS: notify
            CONSUMER_GROUP: notifier-group
            PRODUCER_TOPIC: notified
            PORT: 8083
